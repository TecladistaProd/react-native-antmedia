{"version":3,"file":"rn-antmedia.cjs.production.min.js","sources":["../node_modules/babel-plugin-transform-async-to-promises/helpers.js","../src/hooks/useAntMedia.ts"],"sourcesContent":["// A type of promise-like that resolves synchronously and supports only one observer\nexport const _Pact = /*#__PURE__*/(function() {\n\tfunction _Pact() {}\n\t_Pact.prototype.then = function(onFulfilled, onRejected) {\n\t\tconst result = new _Pact();\n\t\tconst state = this.s;\n\t\tif (state) {\n\t\t\tconst callback = state & 1 ? onFulfilled : onRejected;\n\t\t\tif (callback) {\n\t\t\t\ttry {\n\t\t\t\t\t_settle(result, 1, callback(this.v));\n\t\t\t\t} catch (e) {\n\t\t\t\t\t_settle(result, 2, e);\n\t\t\t\t}\n\t\t\t\treturn result;\n\t\t\t} else {\n\t\t\t\treturn this;\n\t\t\t}\n\t\t}\n\t\tthis.o = function(_this) {\n\t\t\ttry {\n\t\t\t\tconst value = _this.v;\n\t\t\t\tif (_this.s & 1) {\n\t\t\t\t\t_settle(result, 1, onFulfilled ? onFulfilled(value) : value);\n\t\t\t\t} else if (onRejected) {\n\t\t\t\t\t_settle(result, 1, onRejected(value));\n\t\t\t\t} else {\n\t\t\t\t\t_settle(result, 2, value);\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(result, 2, e);\n\t\t\t}\n\t\t};\n\t\treturn result;\n\t}\n\treturn _Pact;\n})();\n\n// Settles a pact synchronously\nexport function _settle(pact, state, value) {\n\tif (!pact.s) {\n\t\tif (value instanceof _Pact) {\n\t\t\tif (value.s) {\n\t\t\t\tif (state & 1) {\n\t\t\t\t\tstate = value.s;\n\t\t\t\t}\n\t\t\t\tvalue = value.v;\n\t\t\t} else {\n\t\t\t\tvalue.o = _settle.bind(null, pact, state);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\tif (value && value.then) {\n\t\t\tvalue.then(_settle.bind(null, pact, state), _settle.bind(null, pact, 2));\n\t\t\treturn;\n\t\t}\n\t\tpact.s = state;\n\t\tpact.v = value;\n\t\tconst observer = pact.o;\n\t\tif (observer) {\n\t\t\tobserver(pact);\n\t\t}\n\t}\n}\n\nexport function _isSettledPact(thenable) {\n\treturn thenable instanceof _Pact && thenable.s & 1;\n}\n\n// Converts argument to a function that always returns a Promise\nexport function _async(f) {\n\treturn function() {\n\t\tfor (var args = [], i = 0; i < arguments.length; i++) {\n\t\t\targs[i] = arguments[i];\n\t\t}\n\t\ttry {\n\t\t\treturn Promise.resolve(f.apply(this, args));\n\t\t} catch(e) {\n\t\t\treturn Promise.reject(e);\n\t\t}\n\t}\n}\n\n// Awaits on a value that may or may not be a Promise (equivalent to the await keyword in ES2015, with continuations passed explicitly)\nexport function _await(value, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(value) : value;\n\t}\n\tif (!value || !value.then) {\n\t\tvalue = Promise.resolve(value);\n\t}\n\treturn then ? value.then(then) : value;\n}\n\n// Awaits on a value that may or may not be a Promise, then ignores it\nexport function _awaitIgnored(value, direct) {\n\tif (!direct) {\n\t\treturn value && value.then ? value.then(_empty) : Promise.resolve();\n\t}\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continue(value, then) {\n\treturn value && value.then ? value.then(then) : then(value);\n}\n\n// Proceeds after a value has resolved, or proceeds immediately if the value is not thenable\nexport function _continueIgnored(value) {\n\tif (value && value.then) {\n\t\treturn value.then(_empty);\n\t}\n}\n\n// Asynchronously iterate through an object that has a length property, passing the index as the first argument to the callback (even as the length property changes)\nexport function _forTo(array, body, check) {\n\tvar i = -1, pact, reject;\n\tfunction _cycle(result) {\n\t\ttry {\n\t\t\twhile (++i < array.length && (!check || !check())) {\n\t\t\t\tresult = body(i);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif (pact) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t} else {\n\t\t\t\tpact = result;\n\t\t\t}\n\t\t} catch (e) {\n\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t}\n\t}\n\t_cycle();\n\treturn pact;\n}\n\n// Asynchronously iterate through an object's properties (including properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forIn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tkeys.push(key);\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\n// Asynchronously iterate through an object's own properties (excluding properties inherited from the prototype)\n// Uses a snapshot of the object's properties\nexport function _forOwn(target, body, check) {\n\tvar keys = [];\n\tfor (var key in target) {\n\t\tif (Object.prototype.hasOwnProperty.call(target, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\treturn _forTo(keys, function(i) { return body(keys[i]); }, check);\n}\n\nexport const _iteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.iterator || (Symbol.iterator = Symbol(\"Symbol.iterator\"))) : \"@@iterator\";\n\n// Asynchronously iterate through an object's values\n// Uses for...of if the runtime supports it, otherwise iterates until length on a copy\nexport function _forOf(target, body, check) {\n\tif (typeof target[_iteratorSymbol] === \"function\") {\n\t\tvar iterator = target[_iteratorSymbol](), step, pact, reject;\n\t\tfunction _cycle(result) {\n\t\t\ttry {\n\t\t\t\twhile (!(step = iterator.next()).done && (!check || !check())) {\n\t\t\t\t\tresult = body(step.value);\n\t\t\t\t\tif (result && result.then) {\n\t\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tresult.then(_cycle, reject || (reject = _settle.bind(null, pact = new _Pact(), 2)));\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tif (pact) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t} else {\n\t\t\t\t\tpact = result;\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\t_settle(pact || (pact = new _Pact()), 2, e);\n\t\t\t}\n\t\t}\n\t\t_cycle();\n\t\tif (iterator.return) {\n\t\t\tvar _fixup = function(value) {\n\t\t\t\ttry {\n\t\t\t\t\tif (!step.done) {\n\t\t\t\t\t\titerator.return();\n\t\t\t\t\t}\n\t\t\t\t} catch(e) {\n\t\t\t\t}\n\t\t\t\treturn value;\n\t\t\t}\n\t\t\tif (pact && pact.then) {\n\t\t\t\treturn pact.then(_fixup, function(e) {\n\t\t\t\t\tthrow _fixup(e);\n\t\t\t\t});\n\t\t\t}\n\t\t\t_fixup();\n\t\t}\n\t\treturn pact;\n\t}\n\t// No support for Symbol.iterator\n\tif (!(\"length\" in target)) {\n\t\tthrow new TypeError(\"Object is not iterable\");\n\t}\n\t// Handle live collections properly\n\tvar values = [];\n\tfor (var i = 0; i < target.length; i++) {\n\t\tvalues.push(target[i]);\n\t}\n\treturn _forTo(values, function(i) { return body(values[i]); }, check);\n}\n\nexport const _asyncIteratorSymbol = /*#__PURE__*/ typeof Symbol !== \"undefined\" ? (Symbol.asyncIterator || (Symbol.asyncIterator = Symbol(\"Symbol.asyncIterator\"))) : \"@@asyncIterator\";\n\n// Asynchronously iterate on a value using it's async iterator if present, or its synchronous iterator if missing\nexport function _forAwaitOf(target, body, check) {\n\tif (typeof target[_asyncIteratorSymbol] === \"function\") {\n\t\tvar pact = new _Pact();\n\t\tvar iterator = target[_asyncIteratorSymbol]();\n\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\treturn pact;\n\t\tfunction _resumeAfterBody(result) {\n\t\t\tif (check && check()) {\n\t\t\t\treturn _settle(pact, 1, iterator.return ? iterator.return().then(function() { return result; }) : result);\n\t\t\t}\n\t\t\titerator.next().then(_resumeAfterNext).then(void 0, _reject);\n\t\t}\n\t\tfunction _resumeAfterNext(step) {\n\t\t\tif (step.done) {\n\t\t\t\t_settle(pact, 1);\n\t\t\t} else {\n\t\t\t\tPromise.resolve(body(step.value)).then(_resumeAfterBody).then(void 0, _reject);\n\t\t\t}\n\t\t}\n\t\tfunction _reject(error) {\n\t\t\t_settle(pact, 2, iterator.return ? iterator.return().then(function() { return error; }) : error);\n\t\t}\n\t}\n\treturn Promise.resolve(_forOf(target, function(value) { return Promise.resolve(value).then(body); }, check));\n}\n\n// Asynchronously implement a generic for loop\nexport function _for(test, update, body) {\n\tvar stage;\n\tfor (;;) {\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t\tif (shouldContinue.then) {\n\t\t\tstage = 0;\n\t\t\tbreak;\n\t\t}\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.s;\n\t\t\t} else {\n\t\t\t\tstage = 1;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tif (update) {\n\t\t\tvar updateValue = update();\n\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\tstage = 2;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t}\n\tvar pact = new _Pact();\n\tvar reject = _settle.bind(null, pact, 2);\n\t(stage === 0 ? shouldContinue.then(_resumeAfterTest) : stage === 1 ? result.then(_resumeAfterBody) : updateValue.then(_resumeAfterUpdate)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tdo {\n\t\t\tif (update) {\n\t\t\t\tupdateValue = update();\n\t\t\t\tif (updateValue && updateValue.then && !_isSettledPact(updateValue)) {\n\t\t\t\t\tupdateValue.then(_resumeAfterUpdate).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\tshouldContinue = test();\n\t\t\tif (!shouldContinue || (_isSettledPact(shouldContinue) && !shouldContinue.v)) {\n\t\t\t\t_settle(pact, 1, result);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t}\n\t\t} while (!result || !result.then);\n\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterBody(result);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n\tfunction _resumeAfterUpdate() {\n\t\tif (shouldContinue = test()) {\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t} else {\n\t\t\t\t_resumeAfterTest(shouldContinue);\n\t\t\t}\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a do ... while loop\nexport function _do(body, test) {\n\tvar awaitBody;\n\tdo {\n\t\tvar result = body();\n\t\tif (result && result.then) {\n\t\t\tif (_isSettledPact(result)) {\n\t\t\t\tresult = result.v;\n\t\t\t} else {\n\t\t\t\tawaitBody = true;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\tvar shouldContinue = test();\n\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\tshouldContinue = shouldContinue.v;\n\t\t}\n\t\tif (!shouldContinue) {\n\t\t\treturn result;\n\t\t}\n\t} while (!shouldContinue.then);\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : shouldContinue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterBody(value) {\n\t\tresult = value;\n\t\tfor (;;) {\n\t\t\tshouldContinue = test();\n\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t}\n\t\t\tif (!shouldContinue) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (shouldContinue.then) {\n\t\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\tresult = result.v;\n\t\t\t\t} else {\n\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterTest(shouldContinue) {\n\t\tif (shouldContinue) {\n\t\t\tdo {\n\t\t\t\tresult = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tif (_isSettledPact(result)) {\n\t\t\t\t\t\tresult = result.v;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tshouldContinue = test();\n\t\t\t\tif (_isSettledPact(shouldContinue)) {\n\t\t\t\t\tshouldContinue = shouldContinue.v;\n\t\t\t\t}\n\t\t\t\tif (!shouldContinue) {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} while (!shouldContinue.then);\n\t\t\tshouldContinue.then(_resumeAfterTest).then(void 0, reject);\n\t\t} else {\n\t\t\t_settle(pact, 1, result);\n\t\t}\n\t}\n}\n\n// Asynchronously implement a switch statement\nexport function _switch(discriminant, cases) {\n\tvar dispatchIndex = -1;\n\tvar awaitBody;\n\touter: {\n\t\tfor (var i = 0; i < cases.length; i++) {\n\t\t\tvar test = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvar testValue = test();\n\t\t\t\tif (testValue && testValue.then) {\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tif (testValue === discriminant) {\n\t\t\t\t\tdispatchIndex = i;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Found the default case, set it as the pending dispatch case\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tif (dispatchIndex !== -1) {\n\t\t\tdo {\n\t\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\t\twhile (!body) {\n\t\t\t\t\tdispatchIndex++;\n\t\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t\t}\n\t\t\t\tvar result = body();\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tawaitBody = true;\n\t\t\t\t\tbreak outer;\n\t\t\t\t}\n\t\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\t\tdispatchIndex++;\n\t\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t\treturn result;\n\t\t}\n\t}\n\tconst pact = new _Pact();\n\tconst reject = _settle.bind(null, pact, 2);\n\t(awaitBody ? result.then(_resumeAfterBody) : testValue.then(_resumeAfterTest)).then(void 0, reject);\n\treturn pact;\n\tfunction _resumeAfterTest(value) {\n\t\tfor (;;) {\n\t\t\tif (value === discriminant) {\n\t\t\t\tdispatchIndex = i;\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tif (++i === cases.length) {\n\t\t\t\tif (dispatchIndex !== -1) {\n\t\t\t\t\tbreak;\n\t\t\t\t} else {\n\t\t\t\t\t_settle(pact, 1, result);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\t\t\ttest = cases[i][0];\n\t\t\tif (test) {\n\t\t\t\tvalue = test();\n\t\t\t\tif (value && value.then) {\n\t\t\t\t\tvalue.then(_resumeAfterTest).then(void 0, reject);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdispatchIndex = i;\n\t\t\t}\n\t\t}\n\t\tdo {\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tvar result = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tdispatchIndex++;\n\t\t} while (fallthroughCheck && !fallthroughCheck());\n\t\t_settle(pact, 1, result);\n\t}\n\tfunction _resumeAfterBody(result) {\n\t\tfor (;;) {\n\t\t\tvar fallthroughCheck = cases[dispatchIndex][2];\n\t\t\tif (!fallthroughCheck || fallthroughCheck()) {\n\t\t\t\tbreak;\n\t\t\t}\n\t\t\tdispatchIndex++;\n\t\t\tvar body = cases[dispatchIndex][1];\n\t\t\twhile (!body) {\n\t\t\t\tdispatchIndex++;\n\t\t\t\tbody = cases[dispatchIndex][1];\n\t\t\t}\n\t\t\tresult = body();\n\t\t\tif (result && result.then) {\n\t\t\t\tresult.then(_resumeAfterBody).then(void 0, reject);\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\t\t_settle(pact, 1, result);\n\t}\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _call(body, then, direct) {\n\tif (direct) {\n\t\treturn then ? then(body()) : body();\n\t}\n\ttry {\n\t\tvar result = Promise.resolve(body());\n\t\treturn then ? result.then(then) : result;\n\t} catch (e) {\n\t\treturn Promise.reject(e);\n\t}\n}\n\n// Asynchronously call a function and swallow the result\nexport function _callIgnored(body, direct) {\n\treturn _call(body, _empty, direct);\n}\n\n// Asynchronously call a function and pass the result to explicitly passed continuations\nexport function _invoke(body, then) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(then);\n\t}\n\treturn then(result);\n}\n\n// Asynchronously call a function and swallow the result\nexport function _invokeIgnored(body) {\n\tvar result = body();\n\tif (result && result.then) {\n\t\treturn result.then(_empty);\n\t}\n}\n\n// Asynchronously call a function and send errors to recovery continuation\nexport function _catch(body, recover) {\n\ttry {\n\t\tvar result = body();\n\t} catch(e) {\n\t\treturn recover(e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(void 0, recover);\n\t}\n\treturn result;\n}\n\n// Asynchronously await a promise and pass the result to a finally continuation\nexport function _finallyRethrows(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer(true, e);\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer.bind(null, false), finalizer.bind(null, true));\n\t}\n\treturn finalizer(false, result);\n}\n\n// Asynchronously await a promise and invoke a finally continuation that always overrides the result\nexport function _finally(body, finalizer) {\n\ttry {\n\t\tvar result = body();\n\t} catch (e) {\n\t\treturn finalizer();\n\t}\n\tif (result && result.then) {\n\t\treturn result.then(finalizer, finalizer);\n\t}\n\treturn finalizer();\n}\n\n// Rethrow or return a value from a finally continuation\nexport function _rethrow(thrown, value) {\n\tif (thrown)\n\t\tthrow value;\n\treturn value;\n}\n\n// Empty function to implement break and other control flow that ignores asynchronous results\nexport function _empty() {\n}\n\n// Sentinel value for early returns in generators \nexport const _earlyReturn = /*#__PURE__*/ {};\n\n// Asynchronously call a function and send errors to recovery continuation, skipping early returns\nexport function _catchInGenerator(body, recover) {\n\treturn _catch(body, function(e) {\n\t\tif (e === _earlyReturn) {\n\t\t\tthrow e;\n\t\t}\n\t\treturn recover(e);\n\t});\n}\n\n// Asynchronous generator class; accepts the entrypoint of the generator, to which it passes itself when the generator should start\nexport const _AsyncGenerator = /*#__PURE__*/(function() {\n\tfunction _AsyncGenerator(entry) {\n\t\tthis._entry = entry;\n\t\tthis._pact = null;\n\t\tthis._resolve = null;\n\t\tthis._return = null;\n\t\tthis._promise = null;\n\t}\n\n\tfunction _wrapReturnedValue(value) {\n\t\treturn { value: value, done: true };\n\t}\n\tfunction _wrapYieldedValue(value) {\n\t\treturn { value: value, done: false };\n\t}\n\n\t_AsyncGenerator.prototype._yield = function(value) {\n\t\t// Yield the value to the pending next call\n\t\tthis._resolve(value && value.then ? value.then(_wrapYieldedValue) : _wrapYieldedValue(value));\n\t\t// Return a pact for an upcoming next/return/throw call\n\t\treturn this._pact = new _Pact();\n\t};\n\t_AsyncGenerator.prototype.next = function(value) {\n\t\t// Advance the generator, starting it if it has yet to be started\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tconst _entry = _this._entry;\n\t\t\t\tif (_entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the next call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Start the generator\n\t\t\t\t_this._entry = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\tfunction returnValue(value) {\n\t\t\t\t\t_this._resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t_this._resolve = null;\n\t\t\t\t}\n\t\t\t\tvar result = _entry(_this);\n\t\t\t\tif (result && result.then) {\n\t\t\t\t\tresult.then(returnValue, function(error) {\n\t\t\t\t\t\tif (error === _earlyReturn) {\n\t\t\t\t\t\t\treturnValue(_this._return);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst pact = new _Pact();\n\t\t\t\t\t\t\t_this._resolve(pact);\n\t\t\t\t\t\t\t_this._pact = null;\n\t\t\t\t\t\t\t_this._resolve = null;\n\t\t\t\t\t\t\t_resolve(pact, 2, error);\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\treturnValue(result);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Generator is started and a yield expression is pending, settle it\n\t\t\t\t_this._pact = null;\n\t\t\t\t_this._resolve = resolve;\n\t\t\t\t_settle(_pact, 1, value);\n\t\t\t}\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.return = function(value) {\n\t\t// Early return from the generator if started, otherwise abandons the generator\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the return call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return the specified value\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn resolve(value && value.then ? value.then(_wrapReturnedValue) : _wrapReturnedValue(value));\n\t\t\t}\n\t\t\t// Settle the yield expression with a rejected \"early return\" value\n\t\t\t_this._return = value;\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, _earlyReturn);\n\t\t});\n\t};\n\t_AsyncGenerator.prototype.throw = function(error) {\n\t\t// Inject an exception into the pending yield expression\n\t\tconst _this = this;\n\t\treturn _this._promise = new Promise(function (resolve, reject) {\n\t\t\tconst _pact = _this._pact;\n\t\t\tif (_pact === null) {\n\t\t\t\tif (_this._entry === null) {\n\t\t\t\t\t// Generator is started, but not awaiting a yield expression\n\t\t\t\t\t// Abandon the throw call!\n\t\t\t\t\treturn resolve(_this._promise);\n\t\t\t\t}\n\t\t\t\t// Generator is not started, abandon it and return a rejected Promise containing the error\n\t\t\t\t_this._entry = null;\n\t\t\t\treturn reject(error);\n\t\t\t}\n\t\t\t// Settle the yield expression with the value as a rejection\n\t\t\t_this._resolve = resolve;\n\t\t\t_this._pact = null;\n\t\t\t_settle(_pact, 2, error);\n\t\t});\n\t};\n\n\t_AsyncGenerator.prototype[_asyncIteratorSymbol] = function() {\n\t\treturn this;\n\t};\n\t\n\treturn _AsyncGenerator;\n})();\n","import { ReactText, useCallback, useEffect, useRef, useState } from 'react';\nimport {\n  RTCPeerConnection,\n  mediaDevices,\n  RTCSessionDescription,\n  RTCIceCandidate,\n  MediaStream,\n  MediaStreamConstraints,\n  EventOnCandidate,\n  RTCSessionDescriptionType,\n  RTCIceCandidateType,\n  EventOnAddStream,\n} from 'react-native-webrtc';\n\nimport {\n  Params,\n  RemoteDescriptionSet,\n  CustomWebSocket,\n  RemotePeerConnectionStats,\n  RemotePeerConnection,\n  RemoteStreams,\n  Socket,\n  Sender,\n  IceCandidateList,\n  Adaptor,\n} from '../interfaces';\n\nfunction useAntMedia(params: Params) {\n  const {\n    url,\n    onopen,\n    callbackError,\n    callback,\n    mediaConstraints,\n    sdp_constraints,\n    peerconnection_config,\n    bandwidth: bwh,\n    debug,\n    onlyDataChannel,\n  } = params;\n  const [roomName, setRoomName] = useState('');\n  const [isMuted, setIsMuted] = useState(false);\n  const [isTurnedOf, setIsTurnedOf] = useState(false);\n  const [isPlayMode, setIsPlayMode] = useState(false);\n  const [remoteStreams, setRemoteStreams] = useState<RemoteStreams>({});\n  const [connected, setConnected] = useState(false);\n  const localStream = useRef<null | MediaStream>(null);\n  const socket = useRef<Socket>({\n    ws: null,\n  }).current;\n  const playStreamIds = useRef<string[]>([]).current;\n  const remotePeerConnection = useRef<RemotePeerConnection>({}).current;\n  const remotePeerConnectionStats = useRef<RemotePeerConnectionStats>({})\n    .current;\n  const remoteDescriptionSet = useRef<RemoteDescriptionSet>({}).current;\n  const iceCandidateList = useRef<IceCandidateList>({}).current;\n  const bandwidth = useRef({ value: bwh || 900 }).current;\n\n  const adaptorRef = useRef<null | Adaptor>(null);\n\n  const closePeerConnection = useCallback((streamId: string) => {\n    if (remotePeerConnection[streamId] != null) {\n      // @ts-ignore\n      if (remotePeerConnection[streamId].dataChannel != null)\n        // @ts-ignore\n        remotePeerConnection[streamId].dataChannel.close();\n\n      setRemoteStreams(value => {\n        const val = { ...value };\n        const streams = [...remotePeerConnection[streamId].getLocalStreams()];\n        streams.forEach(stream => {\n          if (localStream.current?.toURL() !== stream.toURL()) {\n            delete val[stream.toURL()];\n          }\n        });\n        return val;\n      });\n\n      if (remotePeerConnection[streamId].signalingState !== 'closed') {\n        remotePeerConnection[streamId].close();\n        // @ts-ignore;\n        remotePeerConnection[streamId] = null;\n\n        delete remotePeerConnection[streamId];\n        const playStreamIndex = playStreamIds.indexOf(streamId);\n\n        if (playStreamIndex !== -1) {\n          playStreamIds.splice(playStreamIndex, 1);\n        }\n      }\n    }\n\n    if (remotePeerConnectionStats[streamId] != null) {\n      clearInterval(remotePeerConnectionStats[streamId].timerId);\n      delete remotePeerConnectionStats[streamId];\n    }\n  }, []);\n\n  const getVideoSender = useCallback((streamId: string) => {\n    let videoSender = null;\n    const senders: Sender[] = [];\n\n    const rmS = remotePeerConnection[streamId].getRemoteStreams();\n\n    setRemoteStreams(value => {\n      const val = { ...value };\n      const streams = [\n        ...remotePeerConnection[streamId].getLocalStreams(),\n        ...remotePeerConnection[streamId].getRemoteStreams(),\n      ];\n      streams.forEach(stream => {\n        if (localStream.current?.toURL() !== stream.toURL()) {\n          val[stream.toURL()] = stream;\n        }\n      });\n      return val;\n    });\n\n    rmS.forEach(i => {\n      i.getTracks().forEach(track => {\n        senders.push({\n          track,\n          getParameters: () => ({}),\n          setParameters: () => ({}),\n        });\n      });\n    });\n\n    for (let i = 0; i < senders.length; i++) {\n      if (senders[i].track != null && senders[i].track.kind === 'video') {\n        videoSender = senders[i];\n        break;\n      }\n    }\n\n    return videoSender;\n  }, []);\n\n  const changeBandwidth = useCallback(\n    async (bw: ReactText, streamId: string) => {\n      let errorDefinition = '';\n      const videoSender = getVideoSender(streamId);\n\n      if (videoSender !== null) {\n        const parameters = videoSender.getParameters();\n\n        if (!parameters.encodings) {\n          parameters.encodings = [{}];\n        }\n\n        if (bw === 'unlimited') {\n          delete parameters.encodings[0].maxBitrate;\n        } else {\n          parameters.encodings[0].maxBitrate = parseInt(bw + '', 10) * 1000;\n        }\n\n        return videoSender.setParameters(parameters);\n      }\n      errorDefinition = 'Video sender not found to change bandwidth';\n\n      throw new Error(errorDefinition);\n    },\n    [],\n  );\n\n  const iceCandidateReceived = useCallback(\n    (event: EventOnCandidate, streamId: string) => {\n      if (event.candidate) {\n        const jsCmd = {\n          command: 'takeCandidate',\n          streamId,\n          label: event.candidate.sdpMLineIndex,\n          id: event.candidate.sdpMid,\n          candidate: event.candidate.candidate,\n        };\n\n        if (socket.ws) socket.ws.sendJson(jsCmd);\n      }\n    },\n    [],\n  );\n\n  const onTrack = useCallback((event, streamId: string) => {\n    if (!remoteStreams[streamId]) {\n      // setRemoteStreams(dt => {\n      //   dt[streamId] = event.streams[0];\n      //   return dt;\n      // });\n      const dataObj = {\n        track: event.streams[0],\n        streamId,\n      };\n      if (adaptorRef.current)\n        callback.call(adaptorRef.current, 'newStreamAvailable', dataObj);\n    }\n  }, []);\n\n  // data channel mode can be \"publish\" , \"play\" or \"peer\" based on this it is decided which way data channel is created\n  const initPeerConnection = useCallback(\n    async (streamId: string, dataChannelMode: 'publish' | 'play' | 'peer') => {\n      if (remotePeerConnection[streamId] == null) {\n        const closedStreamId = streamId;\n        remotePeerConnection[streamId] = new RTCPeerConnection(\n          peerconnection_config || {\n            iceServers: [],\n          },\n        );\n        remoteDescriptionSet[streamId] = false;\n        iceCandidateList[streamId] = [];\n        if (!playStreamIds.includes(streamId) && localStream.current) {\n          remotePeerConnection[streamId].addStream(localStream.current);\n        }\n        try {\n          remotePeerConnection[streamId].onicecandidate = event => {\n            iceCandidateReceived(event, closedStreamId);\n          };\n          // @ts-ignore\n          remotePeerConnection[streamId].ontrack = event => {\n            if (debug) console.log('onTrack', event);\n            onTrack(event, closedStreamId);\n          };\n\n          remotePeerConnection[streamId].onaddstream = (\n            e: EventOnAddStream,\n          ) => {\n            setRemoteStreams(value => {\n              const val = { ...value };\n              const streams = [\n                ...remotePeerConnection[streamId].getLocalStreams(),\n                ...remotePeerConnection[streamId].getRemoteStreams(),\n              ];\n              streams.forEach(stream => {\n                if (localStream.current?.toURL() !== stream.toURL()) {\n                  val[stream.toURL()] = stream;\n                }\n              });\n              return val;\n            });\n          };\n\n          if (dataChannelMode === 'publish') {\n            //open data channel if it's publish mode peer connection\n            const dataChannelOptions = {\n              ordered: true,\n            };\n            const dataChannelPeer = remotePeerConnection[\n              streamId\n            ].createDataChannel(streamId, dataChannelOptions);\n            initDataChannel(streamId, dataChannelPeer);\n          } else if (dataChannelMode === 'play') {\n            //in play mode, server opens the data channel\n            // Property 'ondatachannel' does not exist on type 'RTCPeerConnection' react-native-webrtc\n            // @ts-ignore\n            remotePeerConnection[streamId].ondatachannel = event => {\n              initDataChannel(streamId, event.channel);\n            };\n          } else {\n            //for peer mode do both for now\n            const dataChannelOptions = {\n              ordered: true,\n            };\n\n            const dataChannelPeer = remotePeerConnection[\n              streamId\n            ].createDataChannel(streamId, dataChannelOptions);\n            initDataChannel(streamId, dataChannelPeer);\n\n            // @ts-ignore\n            remotePeerConnection[streamId].ondatachannel = (ev: any) => {\n              initDataChannel(streamId, ev.channel);\n            };\n          }\n\n          if (!isPlayMode) {\n            remotePeerConnection[\n              streamId\n            ].oniceconnectionstatechange = event => {\n              if (\n                !event.target.iceConnectionState.match(\n                  /(closed|disconnected|failed)/i,\n                )\n              ) {\n                // console.log(event.target.iceConnectionState);\n                try {\n                  getVideoSender(streamId);\n                } catch (err) {}\n              }\n              if (event.target.iceConnectionState === 'connected') {\n                (async () => {\n                  try {\n                    await changeBandwidth(bandwidth.value, streamId);\n                  } catch (e) {\n                    if (debug) console.error(e);\n                  }\n                })();\n              }\n            };\n          }\n        } catch (err) {\n          if (debug) console.error('initPeerConnectionError', err.message);\n        }\n      }\n    },\n    [isPlayMode, localStream],\n  );\n\n  const initDataChannel = useCallback((streamId: string, dataChannel: any) => {\n    console.log(streamId, dataChannel);\n    dataChannel.onerror = (error: any) => {\n      // console.log(\"Data Channel Error:\", error );\n      const obj = {\n        streamId: streamId,\n        error: error,\n      };\n      // console.log(\"channel status: \", dataChannel.readyState);\n      if (dataChannel.readyState !== 'closed' && callbackError) {\n        callbackError('data_channel_error', obj);\n      }\n    };\n\n    dataChannel.onmessage = (event: any) => {\n      const obj = {\n        streamId: streamId,\n        event: event,\n      };\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_received', obj);\n    };\n\n    dataChannel.onopen = () => {\n      // @ts-ignore\n      remotePeerConnection[streamId].dataChannel = dataChannel;\n      // console.log(\"Data channel is opened\");\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_channel_opened', streamId);\n    };\n\n    dataChannel.onclose = () => {\n      // console.log(\"Data channel is closed\");\n      if (callback && adaptorRef.current)\n        callback.call(adaptorRef.current, 'data_channel_closed', streamId);\n    };\n  }, []);\n\n  const gotDescription = useCallback(\n    async (configuration: RTCSessionDescriptionType, streamId: string) => {\n      try {\n        // const response =\n        await remotePeerConnection[streamId].setLocalDescription(configuration);\n\n        const jsCmd = {\n          command: 'takeConfiguration',\n          streamId,\n          type: configuration.type,\n          sdp: configuration.sdp,\n        };\n\n        if (socket.ws) socket.ws.sendJson(jsCmd);\n      } catch (err) {\n        if (debug) console.log('gotDescriptionError', err);\n      }\n    },\n    [],\n  );\n\n  const startPublishing = useCallback(\n    async (streamId: string) => {\n      try {\n        await initPeerConnection(streamId, 'publish');\n        const configuration = await remotePeerConnection[streamId].createOffer(\n          sdp_constraints,\n        );\n        await gotDescription(configuration, streamId);\n      } catch (err) {\n        if (debug) console.log('startPublishing error', err.message, err.stack);\n      }\n    },\n    [initPeerConnection],\n  );\n\n  const getUserMedia = useCallback(async (mdC: MediaStreamConstraints) => {\n    const stream = await mediaDevices.getUserMedia(mdC);\n    if (typeof stream !== 'boolean') localStream.current = stream;\n  }, []);\n\n  const publish = useCallback(\n    (\n      streamId: string,\n      token?: string,\n      subscriberId?: string,\n      subscriberCode?: string,\n    ) => {\n      let data = {} as any;\n      if (onlyDataChannel) {\n        data = {\n          command: 'publish',\n          streamId: streamId,\n          token: token,\n          subscriberId: typeof subscriberId !== undefined ? subscriberId : '',\n          subscriberCode:\n            typeof subscriberCode !== undefined ? subscriberCode : '',\n          video: false,\n          audio: false,\n        };\n      } else {\n        if (localStream.current) return;\n\n        let [video, audio] = [false, false];\n\n        if (localStream.current) {\n          // @ts-ignore\n          video = localStream.current.getVideoTracks().lengh > 0;\n          // @ts-ignore\n          audio = localStream.current.getAudioTracks().lengh > 0;\n        }\n\n        data = {\n          command: 'publish',\n          streamId,\n          token,\n          subscriberId: typeof subscriberId !== undefined ? subscriberId : '',\n          subscriberCode:\n            typeof subscriberCode !== undefined ? subscriberCode : '',\n          video,\n          audio,\n        };\n      }\n\n      if (socket.ws) socket.ws.sendJson(data);\n    },\n    [],\n  );\n\n  const joinRoom = useCallback((room: string, streamId?: string) => {\n    const data = {\n      command: 'joinRoom',\n      room,\n      streamId,\n    };\n    setRoomName(room);\n\n    if (socket.ws) socket.ws.sendJson(data);\n  }, []);\n\n  const leaveFromRoom = useCallback((room: string) => {\n    const data = {\n      command: 'leaveFromRoom',\n      room,\n    };\n    setRoomName(room);\n    if (socket.ws) socket.ws.sendJson(data);\n  }, []);\n\n  const join = useCallback((streamId: string) => {\n    const data = {\n      command: 'join',\n      streamId,\n    };\n    if (socket.ws) socket.ws.sendJson(data);\n  }, []);\n\n  const leave = useCallback((streamId: string) => {\n    const data = {\n      command: 'leave',\n      streamId,\n    };\n    if (socket.ws) socket.ws.sendJson(data);\n  }, []);\n\n  const play = useCallback(\n    (streamId: string, token?: string, room?: string) => {\n      playStreamIds.push(streamId);\n      const data = {\n        command: 'play',\n        streamId,\n        token,\n        room,\n      };\n\n      if (token) {\n        data.token = token;\n      }\n\n      if (socket.ws) socket.ws.sendJson(data);\n\n      setIsPlayMode(true);\n    },\n    [],\n  );\n\n  const stop = useCallback((streamId: string) => {\n    const data = {\n      command: 'stop',\n      streamId,\n    };\n\n    if (socket.ws) socket.ws.sendJson(data);\n    setIsPlayMode(false);\n  }, []);\n\n  const handleTurnVolume = useCallback(() => {\n    if (localStream.current) {\n      const track = localStream.current.getAudioTracks()[0];\n      track.enabled = !track.enabled;\n      setIsMuted(!track.enabled);\n    } else {\n      if (callbackError) callbackError('NoActiveConnection');\n    }\n  }, []);\n\n  const handleTurnCamera = useCallback(() => {\n    if (localStream.current) {\n      const track = localStream.current.getVideoTracks()[0];\n      track.enabled = !track.enabled;\n      setIsTurnedOf(!track.enabled);\n    } else {\n      if (callbackError) callbackError('NoActiveConnection');\n    }\n  }, []);\n\n  const getStreamInfo = useCallback((streamId: string) => {\n    const jsCmd = {\n      command: 'getStreamInfo',\n      streamId,\n    };\n    if (socket.ws) socket.ws.sendJson(jsCmd);\n  }, []);\n\n  const addIceCandidate = useCallback(\n    async (streamId: string, candidate: RTCIceCandidateType) => {\n      try {\n        if (debug) console.debug(`addIceCandidate ${streamId}`);\n        await remotePeerConnection[streamId].addIceCandidate(candidate);\n      } catch (err) {}\n    },\n    [],\n  );\n\n  const takeConfiguration = useCallback(\n    async (idOfStream: string, configuration, typeOfConfiguration) => {\n      const streamId = idOfStream;\n      const type = typeOfConfiguration;\n      const conf = configuration;\n      const isTypeOffer = type === 'offer';\n\n      let dataChannelMode: 'publish' | 'play' = 'publish';\n      if (isTypeOffer) {\n        dataChannelMode = 'play';\n      }\n\n      await initPeerConnection(streamId, dataChannelMode);\n      try {\n        const response = await remotePeerConnection[\n          streamId\n        ].setRemoteDescription(\n          new RTCSessionDescription({\n            sdp: conf,\n            type,\n          }),\n        );\n\n        remoteDescriptionSet[streamId] = true;\n        const { length } = Object.keys(iceCandidateList[streamId]);\n\n        for (let i = 0; i < length; i++) {\n          await addIceCandidate(streamId, iceCandidateList[streamId][i]);\n        }\n        iceCandidateList[streamId] = [];\n\n        if (isTypeOffer) {\n          const configur = await remotePeerConnection[streamId].createAnswer(\n            sdp_constraints,\n          );\n          await gotDescription(configur, streamId);\n        }\n      } catch (error) {\n        if (\n          error.toString().indexOf('InvalidAccessError') > -1 ||\n          error.toString().indexOf('setRemoteDescription') > -1\n        ) {\n          /**\n           * This error generally occurs in codec incompatibility.\n           * AMS for a now supports H.264 codec. This error happens when some browsers try to open it from VP8.\n           */\n          if (callbackError) callbackError('notSetRemoteDescription');\n        }\n      }\n    },\n    [],\n  );\n\n  const takeCandidate = useCallback(\n    async (idOfTheStream: string, tmpLabel, tmpCandidate, sdpMid) => {\n      const streamId = idOfTheStream;\n      const label = tmpLabel;\n      const candidateSdp = tmpCandidate;\n\n      const candidate = new RTCIceCandidate({\n        sdpMLineIndex: label,\n        candidate: candidateSdp,\n        sdpMid,\n      });\n\n      await initPeerConnection(streamId, 'peer');\n\n      if (remoteDescriptionSet[streamId] === true) {\n        await addIceCandidate(streamId, candidate);\n      } else {\n        if (debug)\n          console.debug(\n            'Ice candidate is added to list because remote description is not set yet',\n          );\n        const index = iceCandidateList[streamId].findIndex(\n          i => JSON.stringify(i) === JSON.stringify(candidate),\n        );\n        if (index === -1) {\n          const keys = Object.keys(candidate);\n          for (const key in keys) {\n            // @ts-ignore\n            if (candidate[key] === undefined || candidate[key] === '') {\n              // @ts-ignore\n              candidate[key] = null;\n            }\n          }\n          iceCandidateList[streamId].push(candidate);\n        }\n      }\n    },\n    [],\n  );\n\n  const peerMessage = useCallback(\n    (streamId: string, definition: any, data: any) => {\n      const jsCmd = {\n        command: 'peerMessageCommand',\n        streamId: streamId,\n        definition: definition,\n        data: data,\n      };\n      if (socket.ws) socket.ws.sendJson(jsCmd);\n    },\n    [],\n  );\n\n  const sendData = useCallback((streamId: string, message: string) => {\n    // @ts-ignore\n    const dataChannel = remotePeerConnection[streamId].dataChannel;\n    dataChannel.send(message);\n  }, []);\n\n  const signallingState = useCallback((streamId: string) => {\n    if (remotePeerConnection[streamId] != null) {\n      return remotePeerConnection[streamId].signalingState;\n    }\n    return null;\n  }, []);\n\n  const init = useCallback(async () => {\n    if (\n      !isPlayMode &&\n      typeof mediaConstraints !== 'undefined' &&\n      localStream.current == null &&\n      !onlyDataChannel\n    ) {\n      await getUserMedia(mediaConstraints);\n    }\n  }, [isPlayMode, getUserMedia, mediaConstraints]);\n\n  useEffect(() => {\n    const ws = new WebSocket(url) as CustomWebSocket;\n    let pingTimerId = -1;\n\n    ws.onopen = (data: any) => {\n      ws.sendJson = dt => {\n        ws.send(JSON.stringify(dt));\n      };\n      pingTimerId = setInterval(() => {\n        ws.sendJson({\n          command: 'ping',\n        });\n      });\n      init()\n        .then(() => {\n          if (onopen) onopen(data);\n          socket.ws = ws;\n          setConnected(true);\n        })\n        .catch(err => {\n          if (callbackError) callbackError('initError', err);\n        });\n    };\n\n    ws.onmessage = async event => {\n      const data = JSON.parse(event.data);\n      switch (data.command) {\n        case 'start':\n          startPublishing(data.streamId);\n          break;\n        case 'takeCandidate':\n          takeCandidate(data.streamId, data.label, data.candidate, data.id);\n          break;\n        case 'takeConfiguration':\n          takeConfiguration(data.streamId, data.sdp, data.type);\n          break;\n        case 'stop':\n          closePeerConnection(data.streamId);\n          break;\n        case 'error':\n          if (callbackError) {\n            callbackError(data.definition, data);\n          }\n          break;\n        case 'notification':\n          if (adaptorRef.current)\n            callback.call(adaptorRef.current, data.definition, data);\n          if (\n            data.definition === 'play_finished' ||\n            data.definition === 'publish_finished'\n          ) {\n            closePeerConnection(data.streamId);\n          }\n          break;\n        case 'streamInformation':\n          if (adaptorRef.current)\n            callback.call(adaptorRef.current, data.command, data);\n          break;\n        case 'pong':\n          if (adaptorRef.current)\n            callback.call(adaptorRef.current, data.command);\n          break;\n        default:\n          break;\n      }\n    };\n    ws.onerror = error => {\n      setConnected(false);\n      clearInterval(pingTimerId);\n      if (callbackError) callbackError('Error on connect', error);\n    };\n\n    ws.onclose = () => {\n      setConnected(false);\n      clearInterval(pingTimerId);\n    };\n\n    return () => {\n      ws.onopen = null;\n      ws.onmessage = null;\n      ws.onerror = null;\n      ws.onclose = null;\n      clearInterval(pingTimerId);\n      setConnected(false);\n    };\n  }, [url]);\n\n  useEffect(() => {\n    adaptorRef.current = {\n      publish,\n      joinRoom,\n      leaveFromRoom,\n      join,\n      leave,\n      play,\n      stop,\n      localStream,\n      remoteStreams,\n      getUserMedia,\n      getStreamInfo,\n      signallingState,\n      initPeerConnection,\n      handleTurnVolume,\n      handleTurnCamera,\n      isTurnedOf,\n      isMuted,\n      peerMessage,\n      sendData,\n      // closePeerConnection\n    };\n  }, [connected]);\n\n  return !connected\n    ? null\n    : ({\n        publish,\n        joinRoom,\n        leaveFromRoom,\n        join,\n        leave,\n        play,\n        stop,\n        localStream,\n        remoteStreams,\n        getUserMedia,\n        getStreamInfo,\n        signallingState,\n        initPeerConnection,\n        handleTurnVolume,\n        handleTurnCamera,\n        isTurnedOf,\n        isMuted,\n        peerMessage,\n        sendData,\n        // closePeerConnection\n      } as Adaptor);\n}\n\nexport default useAntMedia;\n"],"names":["_Pact","prototype","then","onFulfilled","onRejected","result","state","this","s","callback","_settle","v","e","o","_this","value","pact","bind","observer","_isSettledPact","thenable","_catch","body","recover","Symbol","iterator","asyncIterator","params","url","onopen","callbackError","mediaConstraints","sdp_constraints","peerconnection_config","bwh","bandwidth","debug","onlyDataChannel","setRoomName","useState","isMuted","setIsMuted","isTurnedOf","setIsTurnedOf","isPlayMode","setIsPlayMode","remoteStreams","setRemoteStreams","connected","setConnected","localStream","useRef","socket","ws","current","playStreamIds","remotePeerConnection","remotePeerConnectionStats","remoteDescriptionSet","iceCandidateList","adaptorRef","closePeerConnection","useCallback","streamId","dataChannel","close","val","getLocalStreams","forEach","stream","toURL","signalingState","playStreamIndex","indexOf","splice","clearInterval","timerId","getVideoSender","videoSender","senders","rmS","getRemoteStreams","i","getTracks","track","push","getParameters","setParameters","length","kind","changeBandwidth","bw","parameters","encodings","maxBitrate","parseInt","Error","iceCandidateReceived","event","candidate","sendJson","command","label","sdpMLineIndex","id","sdpMid","onTrack","call","streams","initPeerConnection","dataChannelMode","closedStreamId","RTCPeerConnection","iceServers","includes","addStream","onicecandidate","ontrack","console","log","onaddstream","dataChannelPeer","createDataChannel","ordered","initDataChannel","ondatachannel","channel","ev","oniceconnectionstatechange","target","iceConnectionState","match","err","error","message","onerror","readyState","onmessage","onclose","gotDescription","configuration","setLocalDescription","type","sdp","startPublishing","createOffer","stack","getUserMedia","mdC","mediaDevices","publish","token","subscriberId","subscriberCode","data","undefined","video","audio","getVideoTracks","lengh","getAudioTracks","joinRoom","room","leaveFromRoom","join","leave","play","stop","handleTurnVolume","enabled","handleTurnCamera","getStreamInfo","addIceCandidate","takeConfiguration","idOfStream","typeOfConfiguration","conf","isTypeOffer","setRemoteDescription","RTCSessionDescription","response","createAnswer","configur","Object","keys","test","update","stage","shouldContinue","updateValue","reject","_resumeAfterTest","_resumeAfterBody","_resumeAfterUpdate","toString","takeCandidate","idOfTheStream","tmpLabel","tmpCandidate","RTCIceCandidate","findIndex","JSON","stringify","key","peerMessage","definition","sendData","send","signallingState","init","useEffect","WebSocket","pingTimerId","dt","setInterval","parse"],"mappings":"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"}